{"ast":null,"code":"const checkStatus = response => {\n  if (response.ok) {\n    return response;\n  } else {\n    console.log(response.error());\n    let error = new Error(response.statusText);\n    error.response = response;\n    response.json().then(e => {\n      error.error = e;\n    });\n    return Promise.reject(error);\n  }\n};\nexport const getAllStudents = () => fetch(\"api/students\").then(checkStatus);\nexport const AddNewStudent = student => fetch(\"api/students\", {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  method: 'POST',\n  body: JSON.stringify(student)\n  // }).then(checkStatus);\n}).then(response => {\n  if (response.ok) {\n    return response;\n  }\n  let error = new Error(response.statusText);\n  response.json().then(e => {\n    error.error = e;\n  });\n  error.response = response;\n  return error;\n});\n_c = AddNewStudent;\nvar _c;\n$RefreshReg$(_c, \"AddNewStudent\");","map":{"version":3,"names":["checkStatus","response","ok","console","log","error","Error","statusText","json","then","e","Promise","reject","getAllStudents","fetch","AddNewStudent","student","headers","method","body","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/xiaomei/IdeaProjects/demo/src/js/src/client.js"],"sourcesContent":["\nconst checkStatus = (response) =>{\n    \n\n\n\n\n\n\n\n    \n    if(response.ok){\n        return response;\n    }else{\n        console.log(response.error());\n        let error = new Error(response.statusText);\n        error.response = response;\n        response.json().then(e=>{\n            error.error = e;\n        });\n        return Promise.reject(error);\n    }\n}\nexport const getAllStudents = () => fetch(\"api/students\").then(checkStatus);\nexport const AddNewStudent =  student => \n fetch(\"api/students\",\n{\n    headers:{\n        'Content-Type':'application/json'\n    },\n    method:'POST',\n    body: JSON.stringify(student)\n// }).then(checkStatus);\n}) .then((response) => {\n    if (response.ok) {\n        return response;\n    }\n    let error = new Error(response.statusText);\n    response.json().then(\n        (e) =>{\n            error.error = e;\n        }\n    );\n    error.response = response;\n    return error;\n  })"],"mappings":"AACA,MAAMA,WAAW,GAAIC,QAAQ,IAAI;EAU7B,IAAGA,QAAQ,CAACC,EAAE,EAAC;IACX,OAAOD,QAAQ;EACnB,CAAC,MAAI;IACDE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,KAAK,CAAC,CAAC,CAAC;IAC7B,IAAIA,KAAK,GAAG,IAAIC,KAAK,CAACL,QAAQ,CAACM,UAAU,CAAC;IAC1CF,KAAK,CAACJ,QAAQ,GAAGA,QAAQ;IACzBA,QAAQ,CAACO,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAE;MACpBL,KAAK,CAACA,KAAK,GAAGK,CAAC;IACnB,CAAC,CAAC;IACF,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;EAChC;AACJ,CAAC;AACD,OAAO,MAAMQ,cAAc,GAAGA,CAAA,KAAMC,KAAK,CAAC,cAAc,CAAC,CAACL,IAAI,CAACT,WAAW,CAAC;AAC3E,OAAO,MAAMe,aAAa,GAAIC,OAAO,IACpCF,KAAK,CAAC,cAAc,EACrB;EACIG,OAAO,EAAC;IACJ,cAAc,EAAC;EACnB,CAAC;EACDC,MAAM,EAAC,MAAM;EACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;EAChC;AACA,CAAC,CAAC,CAAEP,IAAI,CAAER,QAAQ,IAAK;EACnB,IAAIA,QAAQ,CAACC,EAAE,EAAE;IACb,OAAOD,QAAQ;EACnB;EACA,IAAII,KAAK,GAAG,IAAIC,KAAK,CAACL,QAAQ,CAACM,UAAU,CAAC;EAC1CN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAACC,IAAI,CACfC,CAAC,IAAI;IACFL,KAAK,CAACA,KAAK,GAAGK,CAAC;EACnB,CACJ,CAAC;EACDL,KAAK,CAACJ,QAAQ,GAAGA,QAAQ;EACzB,OAAOI,KAAK;AACd,CAAC,CAAC;AAAAiB,EAAA,GArBSP,aAAa;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}